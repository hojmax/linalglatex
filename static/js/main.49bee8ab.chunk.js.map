{"version":3,"sources":["components/ComputationTable.js","components/MatrixTable.js","components/LatexView.js","components/GaussJordan.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","formControl","minWidth","ComputationTable","props","options","require","classes","className","FormControl","InputLabel","Select","value","computation","onChange","event","setComputation","target","errorMsg","error","no_computation","setErrorMsg","MenuItem","Button","style","marginBottom","variant","color","onClick","runComputation","MatrixTable","marginLeft","textAlign","verticalAlign","grid","length","newGrid","map","row","splice","setGrid","push","Array","fill","margin","array","i","e","j","type","onKeyPress","key","illegal_input","Latex","LatexView","useState","isCopied","setIsCopied","canShake","setCanShake","canBounce","onAnimationEnd","setCanBounce","Tooltip","title","navigator","clipboard","writeText","latexString","output","getClipboardClassname","nerdamer","copy2d","input","arr","slice","rowAddition","row1","scalar","row2","steps","toTeX","text","to","rowSwap","temp","rowScale","array2dLatex","array2d","repeat","toString","GaussJordan","copy","topRow","loop2","v","forwardReduction","backwardReduction","action","defaultMatrix","App","setLatexString","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.49bee8ab.chunk.js","sourcesContent":["\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n        minWidth: \"200px\"\n    },\n}))\n\nfunction ComputationTable(props) {\n    const options = require(\"../options.json\")\n    const classes = useStyles()\n    return <table className=\"mt-3\" >\n        <tbody>\n            <tr>\n                <td><FormControl className={classes.formControl}>\n                    <InputLabel>Computation</InputLabel>\n                    <Select\n                        value={props.computation}\n                        onChange={(event) => {\n                            props.setComputation(event.target.value)\n                            if (props.errorMsg === options.error.no_computation) {\n                                props.setErrorMsg(\"\")\n                            }\n                        }}\n                    >\n                        <MenuItem value={\"gauss-jordan\"}>Gauss-Jordan</MenuItem>\n                    </Select>\n                </FormControl></td>\n                <td><Button\n                    className=\"mt-1 ml-3\"\n                    style={{ marginBottom: \"-7px\" }}\n                    variant=\"contained\" color=\"primary\"\n                    onClick={props.runComputation}>Run</Button></td>\n            </tr>\n        </tbody>\n    </table >\n}\n\nexport default ComputationTable","import Button from '@material-ui/core/Button';\n\nfunction MatrixTable(props) {\n    const options = require(\"../options.json\")\n    return <table style={{ marginLeft: \"-50px\" }}>\n        <tbody>\n            <tr>\n                <td style={{ textAlign: \"center\", verticalAlign: \"middle\" }}>\n                    <div className=\"mr-2\">\n                        <Button\n                            className=\"sizeButton\"\n                            variant=\"contained\" color=\"primary\"\n                            onClick={(event) => {\n                                if (props.grid.length > 1) {\n                                    let newGrid = props.grid.map(row => [...row])\n                                    newGrid.splice(newGrid.length - 1, 1)\n                                    props.setGrid(newGrid)\n                                }\n                            }}><i className=\"fas fa-minus\"></i></Button><br />\n                        <Button\n                            className=\"sizeButton mt-1\"\n                            variant=\"contained\" color=\"primary\"\n                            onClick={(event) => {\n                                let newGrid = props.grid.map(row => [...row])\n                                newGrid.push(Array(props.grid[0].length).fill(0))\n                                props.setGrid(newGrid)\n                            }}><i className=\"fas fa-plus\"></i></Button>\n                    </div>\n                </td>\n                <td style={{ textAlign: \"center\", verticalAlign: \"middle\" }}>\n                    <div className=\"matrixBrackets\">\n                        <div className=\"topLeftBorder\" />\n                        <div className=\"topRightBorder\" />\n                        <div className=\"bottomLeftBorder\" />\n                        <div className=\"bottomRightBorder\" />\n                        <table style={{ margin: \"auto\" }}>\n                            <tbody>\n                                {props.grid.map((array, i) => <tr key={`row${i}`}>\n                                    {array.map((e, j) => <td key={`e${i}${j}`}>\n                                        <input\n                                            type=\"text\"\n                                            className=\"matrixInput\"\n                                            style={{ textAlign: \"center\" }}\n                                            value={props.grid[i][j]}\n                                            onKeyPress={(event) => event.key === 'Enter' && props.runComputation()}\n                                            onChange={(event) => {\n                                                if (props.errorMsg === options.error.illegal_input) {\n                                                    props.setErrorMsg(\"\")\n                                                }\n                                                let newGrid = props.grid.map(row => [...row])\n                                                newGrid[i][j] = event.target.value\n                                                props.setGrid(newGrid)\n                                            }} />\n                                    </td>)}\n                                </tr>)}\n                            </tbody>\n                        </table>\n                    </div>\n                </td>\n            </tr>\n            <tr>\n                <td></td>\n                <td style={{ textAlign: \"center\", verticalAlign: \"middle\" }}>\n                    <div className=\"mt-2\">\n                        <Button\n                            variant=\"contained\" color=\"primary\"\n                            className=\"sizeButton\"\n                            onClick={(event) => {\n                                if (props.grid[0].length > 1) {\n                                    let newGrid = props.grid.map(row => [...row])\n                                    for (let i = 0; i < newGrid.length; i++) {\n                                        newGrid[i].splice(newGrid[i].length - 1, 1)\n                                    }\n                                    props.setGrid(newGrid)\n                                }\n                                //\n                            }}><i className=\"fas fa-minus\"></i></Button>\n                        <Button\n                            variant=\"contained\" color=\"primary\"\n                            className=\"sizeButton ml-1\"\n                            onClick={(event) => {\n                                let newGrid = props.grid.map(row => [...row])\n                                for (let i = 0; i < newGrid.length; i++) {\n                                    newGrid[i].push(0)\n                                }\n                                props.setGrid(newGrid)\n                            }}\n                        ><i className=\"fas fa-plus\"></i></Button>\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n    </table >\n}\n\nexport default MatrixTable","import { useState } from \"react\"\nimport Tooltip from '@material-ui/core/Tooltip';\nvar Latex = require('react-latex');\n\nfunction LatexView(props) {\n    const [isCopied, setIsCopied] = useState(false)\n    const [canShake, setCanShake] = useState(false)\n    const getClipboardClassname = () => {\n        let output = \"clipboardIcon fas fa-clipboard\"\n        if (isCopied) {\n            output += \"-check \"\n        }\n        if (canShake) {\n            output += \" shakeAnimation\"\n        }\n        return output\n    }\n    return <div\n        className={\"mt-4 mb-4 latexContainer \" + (props.canBounce && \"bounceIn\")}\n        onAnimationEnd={() => props.setCanBounce(false)}>\n        <Tooltip title={isCopied ? \"Copied!\" : \"Copy LaTeX\"}>\n            <i onAnimationEnd={() => setCanShake(false)}\n                onClick={() => { setCanShake(true); setIsCopied(true); navigator.clipboard.writeText(props.latexString) }}\n                className={getClipboardClassname()}></i>\n        </Tooltip>\n        <Latex>{`$$${props.latexString}$$`}</Latex>\n    </div>\n}\n\nexport default LatexView","var nerdamer = require('nerdamer')\n\nfunction copy2d(input) {\n    return input.map(arr => arr.slice());\n}\n\nfunction rowAddition(input, row1, scalar, row2, steps) {\n    const stepsScalar = nerdamer(scalar).toTeX()\n    if (stepsScalar !== \"0\") {\n        for (let i = 0; i < input[row1].length; i++) {\n            input[row1][i] = nerdamer(`${input[row1][i]} ${scalar} * (${input[row2][i]})`).text('fractions')\n        }\n        steps.push({ type: \"addition\", row1: row1, scalar: nerdamer(scalar).toTeX(), row2: row2, to: copy2d(input) })\n    }\n}\n\nfunction rowSwap(input, row1, row2, steps) {\n    const temp = input[row1]\n    input[row1] = input[row2]\n    input[row2] = temp\n    steps.push({ type: \"swap\", row1: row1, row2: row2, to: copy2d(input) })\n}\n\nfunction augmentRight(matrix1, matrix2) {\n    for (let i = 0; i < matrix1.length; i++) {\n        matrix1[i] = matrix1[i].concat(matrix2[i])\n    }\n}\n\nfunction rowScale(input, row1, scalar, steps) {\n    const stepsScalar = nerdamer(scalar).toTeX()\n    if (stepsScalar !== \"1\") {\n        for (let i = 0; i < input[row1].length; i++) {\n            input[row1][i] = nerdamer(`${scalar} * (${input[row1][i]})`).text('fractions')\n        }\n        steps.push({ type: \"scale\", row1: row1, scalar: nerdamer(scalar).toTeX(), to: copy2d(input) })\n    }\n}\n\nfunction forwardReduction(input, steps) {\n    for (let topRow = 0; topRow < input.length - 1; topRow++) {\n        let j = 0\n        loop2: while (j < input[0].length) {\n            for (let i = topRow; i < input.length; i++) {\n                if (input[i][j] !== \"\" && input[i][j] !== \"0\" && input[i][j] !== 0) {\n                    if (i !== topRow) {\n                        rowSwap(input, i, topRow, steps)\n                    }\n                    break loop2\n                }\n            }\n            j++\n        }\n        for (let v = topRow + 1; v < input.length; v++) {\n            rowAddition(input, v, `-(${input[v][j]})/(${input[topRow][j]})`, topRow, steps)\n        }\n    }\n}\n\nfunction backwardReduction(input, steps) {\n    for (let i = input.length - 1; i >= 0; i--) {\n        for (let j = 0; j < input[0].length; j++) {\n            if (input[i][j] !== \"\" && input[i][j] !== \"0\" && input[i][j] !== 0) {\n                rowScale(input, i, `1/(${input[i][j]})`, steps)\n                for (let v = i - 1; v >= 0; v--) {\n                    rowAddition(input, v, `-(${input[v][j]})`, i, steps)\n                }\n                break\n            }\n        }\n    }\n}\n\nfunction array2dLatex(array2d) {\n    let output = `\\\\left[\\\\begin{array}{${\"r\".repeat(array2d[0].length)}}\\n\\t`\n    for (let i = 0; i < array2d.length; i++) {\n        for (let j = 0; j < array2d[i].length; j++) {\n            output += nerdamer(array2d[i][j].toString()).toTeX()\n            if (j === array2d[i].length - 1) {\n                output += \"\\\\\\\\\\n\" + (i !== array2d.length - 1 ? \"\\t\" : \"\")\n            } else {\n                output += \" & \"\n            }\n        }\n    }\n    output += \"\\\\end{array}\\\\right]\"\n    return output\n}\n\nfunction GaussJordan(input) {\n    let output = \"\\\\begin{aligned}\\n\"\n    let steps = []\n    let copy = copy2d(input)\n    forwardReduction(copy, steps)\n    backwardReduction(copy, steps)\n    output += array2dLatex(input) + \"\\n\"\n    for (let i = 0; i < steps.length; i++) {\n        const e = steps[i]\n        let action = \"r_1\";\n        if (e.type === \"addition\") {\n            action = `r_${e.row1 + 1}${e.scalar[0] === \"-\" ? \"\" : \"+\"}${e.scalar === \"-1\" ? \"-\" : (e.scalar !== 1 ? e.scalar : \"\")}r_${e.row2 + 1}\\\\to r_${e.row1 + 1}`\n        } else if (e.type === \"scale\") {\n            action = `${e.scalar}r_${e.row1 + 1}\\\\to r_${e.row1 + 1}`\n        } else if (e.type === \"swap\") {\n            action = `r_${e.row1 + 1} \\\\leftrightarrow r_${e.row2 + 1}`\n        }\n        output += `\\t&\\\\xrightarrow{${action}}\\n`\n        output += array2dLatex(e.to)\n        output += \"\\\\\\\\\\n\"\n    }\n    output += \"\\\\end{aligned}\"\n    return output\n}\n\nexport default GaussJordan","import ComputationTable from './components/ComputationTable'\nimport MatrixTable from './components/MatrixTable'\nimport LatexView from './components/LatexView'\nimport GaussJordan from './components/GaussJordan'\nimport { useState } from \"react\"\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'katex/dist/katex.min.css'\nimport './App.css'\n\nconst defaultMatrix = [\n  [\"a\", 1, 2],\n  [0, \"1/7\", 19],\n  [\"1/9\", 9, 1]\n]\n\nfunction App() {\n  const [latexString, setLatexString] = useState(\"\")\n  const [grid, setGrid] = useState(defaultMatrix)\n  const [canBounce, setCanBounce] = useState(true)\n  const [computation, setComputation] = useState(\"\")\n  const [errorMsg, setErrorMsg] = useState(\"\")\n  const options = require(\"./options.json\")\n\n  const runComputation = () => {\n    if (computation === \"\") {\n      setErrorMsg(options.error.no_computation)\n    } else {\n      if (computation === \"gauss-jordan\") {\n        try {\n          setLatexString(GaussJordan(grid))\n          setCanBounce(true)\n        } catch {\n          setErrorMsg(options.error.illegal_input)\n        }\n      }\n    }\n  }\n\n  return (<>\n    <div className=\"logoText\">LinAlgLatex.io</div>\n    <center className=\"mt-5\">\n      <MatrixTable\n        grid={grid}\n        setGrid={setGrid}\n        setErrorMsg={setErrorMsg}\n        runComputation={runComputation}\n        errorMsg={errorMsg} />\n      <ComputationTable\n        computation={computation}\n        setComputation={setComputation}\n        setErrorMsg={setErrorMsg}\n        errorMsg={errorMsg}\n        grid={grid}\n        runComputation={runComputation}\n        setLatexString={setLatexString} />\n      {errorMsg && <p className=\"errorMsg mt-4\">{errorMsg}</p>}\n      {latexString && <LatexView\n        canBounce={canBounce}\n        setCanBounce={setCanBounce}\n        latexString={latexString} />}\n    </center>\n  </>)\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}